joint_state_controller:
  type: joint_state_controller/JointStateController
  publish_rate: 50

panda_joint_publisher:
  type: "joint_state_controller/JointStateController"
  publish_rate: 50

boxer_joint_publisher:
  type: "joint_state_controller/JointStateController"
  publish_rate: 30



velocity_joint_trajectory_controller:
  type: velocity_controllers/JointTrajectoryController
  joints:
      - mmrobot_joint1
      - mmrobot_joint2
      - mmrobot_joint3
      - mmrobot_joint4
      - mmrobot_joint5
      - mmrobot_joint6
      - mmrobot_joint7
  gains:
    mmrobot_joint1: {p: 1.0, i: 0.0, d: 0.3, i_clamp: 0.0}
    mmrobot_joint2: {p: 1.0, i: 0.0, d: 0.3, i_clamp: 0.0}
    mmrobot_joint3: {p: 1.0, i: 0.0, d: 0.3, i_clamp: 0.0}
    mmrobot_joint4: {p: 1.0, i: 0.0, d: 0.3, i_clamp: 0.0}
    mmrobot_joint5: {p: 1.0, i: 0.0, d: 0.3, i_clamp: 0.0}
    mmrobot_joint6: {p: 1.0, i: 0.0, d: 0.3, i_clamp: 0.0}
    mmrobot_joint7: {p: 1.0, i: 0.0, d: 0.3, i_clamp: 0.0}

  constraints:
      goal_time: 0.6
      stopped_velocity_tolerance: 0.5
      mmrobot_joint1: {trajectory: 0.1, goal: 0.1}
      mmrobot_joint2: {trajectory: 0.1, goal: 0.1}
      mmrobot_joint3: {trajectory: 0.1, goal: 0.1}
      mmrobot_joint4: {trajectory: 0.1, goal: 0.1}
      mmrobot_joint5: {trajectory: 0.1, goal: 0.1}
      mmrobot_joint6: {trajectory: 0.1, goal: 0.1}
      mmrobot_joint7: {trajectory: 0.1, goal: 0.1}

  stop_trajectory_duration: 0.5
  state_publish_rate:  25
  action_monitor_rate: 10



boxer_velocity_controller:
  type: "diff_drive_controller/DiffDriveController"
  left_wheel: ['wheel_left_joint']
  right_wheel: ['wheel_right_joint']
  publish_rate: 30
  pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
  twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
  cmd_vel_timeout: 0.25

  # Odometry fused with IMU is published by robot_localization, so
  # no need to publish a TF based on encoders alone.
  enable_odom_tf: true
  base_frame_id: base_link #default base_link

  # Wheel separation and radius multipliers
  wheel_separation_multiplier: 1.0 # default: 1.0
  wheel_radius_multiplier    : 1.0 # default: 1.0

  # Velocity and acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  linear:
    x:
      has_velocity_limits    : true
      max_velocity           : 1.9   # m/s
      has_acceleration_limits: true
      max_acceleration       : 2.0   # m/s^2
  angular:
    z:
      has_velocity_limits    : true
      max_velocity           : 2.0   # rad/s
      has_acceleration_limits: true
      max_acceleration       : 2.0   # rad/s^2
